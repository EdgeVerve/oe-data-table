{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`oe-data-table-filter`\n is used in `oe-data-table` component for displayig a column filter data. List of unique items present in a column is shown.",
      "summary": "",
      "path": "src/oe-data-table-filter.js",
      "properties": [
        {
          "name": "_selectedItems",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "column",
          "type": "{key: string, label: string, uiType: string, type: string, sort: string}",
          "description": "The definition of the column of the current cell.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "data object array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "isServerData",
          "type": "boolean | null | undefined",
          "description": "Flag denoting if the data is from server.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeCellData",
          "description": "Fetches the row value for this column.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "row",
              "type": "Object",
              "description": "row data"
            },
            {
              "name": "column",
              "type": "Object",
              "description": "column configuration"
            }
          ],
          "return": {
            "type": "Any",
            "desc": "value of row for this column"
          }
        },
        {
          "name": "_applyFilter",
          "description": "Applies the filter",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 2
            },
            "end": {
              "line": 201,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt",
              "type": "Event",
              "description": "tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetFilter",
          "description": "Resets the filter",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 2
            },
            "end": {
              "line": 225,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt",
              "type": "Event",
              "description": "tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeFilter",
          "description": "Closes the filter dialog",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hasFilterSelected",
          "description": "Checks if a filter is selected",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change",
              "type": "Object",
              "description": "change data on _completeselection"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag denoting filter is selected"
          }
        },
        {
          "name": "_itemsChanged",
          "description": "Popultes a unique value list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 2
            },
            "end": {
              "line": 270,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change",
              "type": "Object",
              "description": "change data on items"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_filterItems",
          "description": "Filters the items array based on searchText",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 2
            },
            "end": {
              "line": 283,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "array of items"
            },
            {
              "name": "searchText",
              "type": "string",
              "description": "string to search"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "filtered items array"
          }
        },
        {
          "name": "_getSelectionState",
          "description": "Checks if the item is selected",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "item for filter"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag if the item is selected."
          }
        },
        {
          "name": "_toggleSelectAll",
          "description": "Toggles the selection on all items",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 2
            },
            "end": {
              "line": 305,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleCheckboxSelection",
          "description": "Updates the selectionState object",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "change event of checkbox"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCheckBox",
          "description": "Sets `_selectAllItems` to false when entering on filter input",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 2
            },
            "end": {
              "line": 329,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "change event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateListSize",
          "description": "Updates the iron-list based on dom-if change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 2
            },
            "end": {
              "line": 342,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "dom-change-event"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 344,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTableFilter",
      "attributes": [
        {
          "name": "column",
          "description": "The definition of the column of the current cell.",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "type": "{key: string, label: string, uiType: string, type: string, sort: string}"
        },
        {
          "name": "items",
          "description": "data object array.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "is-server-data",
          "description": "Flag denoting if the data is from server.",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "apply-criteria",
          "description": "Fired when the cell is value is changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "column-changed",
          "description": "Fired when the `column` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table-filter",
      "mixins": [
        "OECommonMixin"
      ]
    },
    {
      "description": "`oe-data-table-header-cell`\n is used in `oe-data-table` component for displayig column headers. A column can be sorted by clicking on the title.\n Hovering over this component shows a filter icon which opens filter dialog for choosing values to filter.",
      "summary": "",
      "path": "src/oe-data-table-header-cell.js",
      "properties": [
        {
          "name": "column",
          "type": "{key: string, label: string, type: string, uiType: string, sort: string}",
          "description": "The definition of the column of the current cell.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "colIndex",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "isServerData",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeColumnLabel",
          "description": "Computes label based on 'label' or 'key' property of column",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "Object",
              "description": "column configuration"
            }
          ],
          "return": {
            "type": "string",
            "desc": "column label"
          }
        },
        {
          "name": "_changeSortOrder",
          "description": "Handles updating the sort",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 217,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleResize",
          "description": "Handles resizing the column width",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "Mousedown event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "openFilter",
          "description": "Opens the filter dialog",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 2
            },
            "end": {
              "line": 258,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt",
              "type": "Event",
              "description": "tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_positionFilterDialog",
          "description": "Positions the filter to appear below the header cell",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 2
            },
            "end": {
              "line": 272,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "overlay-opened event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_disableFilter",
          "description": "Checks to diabled filter on column",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 2
            },
            "end": {
              "line": 281,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "Object",
              "description": "column configuration"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag denoting to disable filter"
          }
        },
        {
          "name": "_computeCellAlignment",
          "description": "Computes the cell class based on type.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 2
            },
            "end": {
              "line": 296,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "Object",
              "description": "column configuration"
            }
          ],
          "return": {
            "type": "string",
            "desc": "class name based on column type"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 298,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTableHeaderCell",
      "attributes": [
        {
          "name": "column",
          "description": "The definition of the column of the current cell.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "type": "{key: string, label: string, type: string, uiType: string, sort: string}"
        },
        {
          "name": "col-index",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "items",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "is-server-data",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "apply-criteria",
          "description": "Fired when the sort of the column is changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "change-column-width",
          "description": "Fired when the column width is changed via mouse drag",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oe-data-table-cell-value-changed",
          "description": "Fired when the cell is value is changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "column-changed",
          "description": "Fired when the `column` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table-header-cell",
      "mixins": [
        "OECommonMixin"
      ]
    },
    {
      "description": "`oe-data-table-column-customizer`\nis used in `oe-data-table` component for displayig a column data.",
      "summary": "",
      "path": "src/oe-data-table-column-customizer.js",
      "properties": [
        {
          "name": "columns",
          "type": "Array | null | undefined",
          "description": "Columns array to be configured",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"columnsChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "dataTypes",
          "type": "Array | null | undefined",
          "description": "Default data types",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[\"number\",\"string\",\"date\",\"timestamp\",\"combo\",\"typeahead\",\"object\"]"
        },
        {
          "name": "aggregators",
          "type": "Array | null | undefined",
          "description": "Aggregators list",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[{\"key\":\"Sum\",\"value\":\"sum\"},{\"key\":\"Average\",\"value\":\"average\"},{\"key\":\"Count\",\"value\":\"count\"}]"
        }
      ],
      "methods": [
        {
          "name": "columnsChanged",
          "description": "Observer on columns",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "computeClass",
          "description": "Computes a class based on flag",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 2
            },
            "end": {
              "line": 241,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hidden",
              "type": "boolean",
              "description": "flag to denote column is hidden"
            }
          ],
          "return": {
            "type": "string",
            "desc": "class name based on the hidden flag"
          }
        },
        {
          "name": "closeColumnCustomizer",
          "description": "Closes the customizer",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 2
            },
            "end": {
              "line": 248,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "customizeView",
          "description": "Applies the customization",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 257,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTableColumnCustomizer",
      "attributes": [
        {
          "name": "columns",
          "description": "Columns array to be configured",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "data-types",
          "description": "Default data types",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "aggregators",
          "description": "Aggregators list",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 204,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "close-column-customizer",
          "description": "Fired to ignore the customization changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "customize-view",
          "description": "Fired to apply the customization.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "columns-changed",
          "description": "Fired when the `columns` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table-column-customizer",
      "mixins": [
        "OECommonMixin"
      ]
    },
    {
      "description": "`oe-data-table-pagination-panel`\n Pagination panel used in oe-data-table\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--oe-pagination-panel` | Mixin applied on the entire panel | {}",
      "summary": "",
      "path": "src/oe-data-table-pagination-panel.js",
      "properties": [
        {
          "name": "pageSize",
          "type": "number | null | undefined",
          "description": "page size value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "rowsPerPageItems",
          "type": "Array | null | undefined",
          "description": "Array containing different page sizes",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "currentPage",
          "type": "number | null | undefined",
          "description": "Current page index",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "itemsLength",
          "type": "number | null | undefined",
          "description": "Length of items in this page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "rowCount",
          "type": "number | null | undefined",
          "description": "Total count of items",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeRowIndex",
          "description": "Computes the value for '_startRow' and '_endRow'",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 155,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentPage",
              "type": "number",
              "description": "current page number"
            },
            {
              "name": "pageSize",
              "type": "number",
              "description": "total page size"
            },
            {
              "name": "itemsLength",
              "type": "number",
              "description": "length of items displayed"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_totalRowsCount",
          "description": "Computes total row count display",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 2
            },
            "end": {
              "line": 164,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "itemsLength",
              "type": "number",
              "description": "length of items displayed"
            }
          ],
          "return": {
            "type": "(string | number)",
            "desc": "total rows"
          }
        },
        {
          "name": "_disablePrevious",
          "description": "Checks if the previous button should be disabled",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 173,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentPage",
              "type": "number",
              "description": "current page index"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag to disable the previous page button"
          }
        },
        {
          "name": "_previousPage",
          "description": "Navigates to previous page",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "HTML click event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_nextPage",
          "description": "Navigates to next page",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "HTML click event"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 195,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTablePaginationPanel",
      "attributes": [
        {
          "name": "page-size",
          "description": "page size value",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "rows-per-page-items",
          "description": "Array containing different page sizes",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "current-page",
          "description": "Current page index",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "items-length",
          "description": "Length of items in this page",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "row-count",
          "description": "Total count of items",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "page-size-changed",
          "description": "Fired when the `pageSize` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "current-page-changed",
          "description": "Fired when the `currentPage` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table-pagination-panel",
      "mixins": [
        "OECommonMixin"
      ]
    },
    {
      "description": "`oe-data-table-header`\n Header panel of oe-data-table displaying table-label and table-actions like add,edit,etc.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--oe-data-table-header` | Mixin applied on the entire header panel | {}\n`--oe-data-table-header-title` | Mixin applied on the header title | {}",
      "summary": "",
      "path": "src/oe-data-table-header.js",
      "properties": [
        {
          "name": "selectedLength",
          "type": "number | null | undefined",
          "description": "Length of items selected in the table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 12
            },
            "end": {
              "line": 184,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Title for the data-table header",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 12
            },
            "end": {
              "line": 191,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Flag to disable all opertaions",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 12
            },
            "end": {
              "line": 200,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableAdd",
          "type": "boolean | null | undefined",
          "description": "Flag to disable add icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 12
            },
            "end": {
              "line": 209,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableEdit",
          "type": "boolean | null | undefined",
          "description": "Flag to disable edit icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 12
            },
            "end": {
              "line": 218,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableConfigEditor",
          "type": "boolean | null | undefined",
          "description": "Flag to disable config editor",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 12
            },
            "end": {
              "line": 227,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableDelete",
          "type": "boolean | null | undefined",
          "description": "Flag to disabled delete icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 12
            },
            "end": {
              "line": 236,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "configCode",
          "type": "string | null | undefined",
          "description": "Config code passed to oe-data-table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 12
            },
            "end": {
              "line": 244,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "toolbarActions",
          "type": "Array | null | undefined",
          "description": "Array of actions to be displayed as icons on the header\nActions should be of format\n{\n   icon: 'icons:alarm',\n   title: 'Notify Users',\n   action: 'alarm'\n}\nThese will appear as icons on the header with a tooltip specified by 'title'\nOn clicking on the icon an event will be raised with 'oe-data-table-action-' + the action provided.\nIn the case of example 'oe-data-table-action-alarm'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 12
            },
            "end": {
              "line": 264,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "menuActions",
          "type": "Array | null | undefined",
          "description": "Array of actions to be displayed on menu of the header\nThe format and working is similar to toolbarActions , The difference being that these will appear\nWhen the Menu icons is clicked and displays with icon and title.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 12
            },
            "end": {
              "line": 276,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "_isMultiSelected",
          "description": "Checks if multiple items are selected.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 326,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItemsLength",
              "type": "number",
              "description": "length of selected items"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag denoting if multiple items are selected."
          }
        },
        {
          "name": "_toggleSelectAll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 329,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "refreshRender",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showAddForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 4
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openColumnCustomizer",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showEditForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 4
            },
            "end": {
              "line": 341,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteSelectedRows",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 344,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tableActionTapped",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveGridConfig",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showMenuIcon",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 358,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "configCode"
            },
            {
              "name": "menuActions"
            }
          ]
        },
        {
          "name": "_hideEditIcon",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 362,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItemsLength"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 363,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTableHeader",
      "attributes": [
        {
          "name": "selected-length",
          "description": "Length of items selected in the table",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 12
            },
            "end": {
              "line": 184,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "label",
          "description": "Title for the data-table header",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 12
            },
            "end": {
              "line": 191,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Flag to disable all opertaions",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 12
            },
            "end": {
              "line": 200,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-add",
          "description": "Flag to disable add icon",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 12
            },
            "end": {
              "line": 209,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-edit",
          "description": "Flag to disable edit icon",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 12
            },
            "end": {
              "line": 218,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-config-editor",
          "description": "Flag to disable config editor",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 12
            },
            "end": {
              "line": 227,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-delete",
          "description": "Flag to disabled delete icon",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 12
            },
            "end": {
              "line": 236,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "config-code",
          "description": "Config code passed to oe-data-table",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 12
            },
            "end": {
              "line": 244,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "toolbar-actions",
          "description": "Array of actions to be displayed as icons on the header\nActions should be of format\n{\n   icon: 'icons:alarm',\n   title: 'Notify Users',\n   action: 'alarm'\n}\nThese will appear as icons on the header with a tooltip specified by 'title'\nOn clicking on the icon an event will be raised with 'oe-data-table-action-' + the action provided.\nIn the case of example 'oe-data-table-action-alarm'",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 12
            },
            "end": {
              "line": 264,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "menu-actions",
          "description": "Array of actions to be displayed on menu of the header\nThe format and working is similar to toolbarActions , The difference being that these will appear\nWhen the Menu icons is clicked and displays with icon and title.",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 12
            },
            "end": {
              "line": 276,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "delete-selected-rows",
          "description": "Fired when the delete icon is clicked after selecting records.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "refresh-render",
          "description": "Fired when the refresh icon is pressed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "save-grid-config",
          "description": "Fired when save grid config option is selected from menu.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "show-add-form",
          "description": "Fired when the add icon is clicked on the grid view.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "show-column-customizer",
          "description": "Fired when the config icon is clicked on the grid view",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "show-edit-form",
          "description": "Fired when the edit icon is clicked after selecting a record.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "toggle-select-all",
          "description": "Fired when the back arrow icon is pressed after multiple selections are made.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table-header",
      "mixins": [
        "OECommonMixin"
      ]
    },
    {
      "description": "# oe-data-table-cell\n `<oe-data-table-cell>` is used in `oe-data-table` component for displayig a cell data. A cell content can be edited if enabled.\n Custom rendering of cell content is also taken care by this component.",
      "summary": "",
      "path": "src/oe-data-table-cell.js",
      "properties": [
        {
          "name": "column",
          "type": "{key: string, label: string, type: string, uiType: string, sort: string, readOnly: boolean}",
          "description": "The definition of the column of the current cell.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "readOnly",
          "type": "boolean | null | undefined",
          "description": "Disable editing field (equivalent to column.readOnly)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "row",
          "type": "Object | null | undefined",
          "description": "row object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "key",
          "type": "number | null | undefined",
          "description": "Index of the current `row` in the `_items` array",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_inEdit",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 91,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_element",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_hasCustomRenderer",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_notifyResizeAsyncTask",
          "type": "number | null | undefined",
          "description": "task number indicating an Async task that notify `iron-list` to update its content",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_customRenderAsyncTask",
          "type": "number | null | undefined",
          "description": "task number indicating an Async task that builds and renders the custom renderer element",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_displayValue",
          "type": "Object | null | undefined",
          "description": "value to be shown in the cell",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "columnTemplate",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "isFirstRow",
          "type": "boolean | null | undefined",
          "description": "Flag denoting cell to be present in first row of the data-table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_buildCustomRenderer",
          "description": "On row data change re-renders or updates the binding of the rendered content.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rowChange",
              "type": "Object",
              "description": "change data on row"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCellData",
          "description": "Computes the display content for cell.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 285,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rowPath",
              "type": "Object",
              "description": "change data on row"
            },
            {
              "name": "column",
              "type": "Object",
              "description": "column configuration"
            }
          ],
          "return": {
            "type": "null",
            "desc": "if column doesn't have a 'key' or 'field' display value is not computed."
          }
        },
        {
          "name": "_handleCellTap",
          "description": "On tap sets the cell as active cell",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 298,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "tap event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enterEditMode",
          "description": "Creates a new element and focuses it to edit the value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 303,
              "column": 2
            },
            "end": {
              "line": 326,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "exitEditMode",
          "description": "Exits edit mode by resetting to display value.\nIf the inline element had content it is set on row.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 2
            },
            "end": {
              "line": 344,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_extractDropdownAndAddToBody",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 347,
              "column": 2
            },
            "end": {
              "line": 357,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "elem"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createElement",
          "description": "Dynamically creates a element based on column.uitype.\nSets the editorAttributes on the element and appends it inside the cell.\nAttaches event listener for change and keydown",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 2
            },
            "end": {
              "line": 394,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleValueChange",
          "description": "On change event update row value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 2
            },
            "end": {
              "line": 410,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "change event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hideDefaultValue",
          "description": "Checks if the default value needs to be hidden.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 418,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_inEdit",
              "type": "boolean",
              "description": "Flag for edit mode."
            },
            {
              "name": "_hasCustomRenderer",
              "type": "boolean",
              "description": "Flag for custom renderer."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Flag to hide the default value."
          }
        },
        {
          "name": "_buildHref",
          "description": "Builds href by replacing `:prop` with row data 'prop' value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 427,
              "column": 2
            },
            "end": {
              "line": 434,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "href",
              "type": "string",
              "description": "href parameter for cell"
            }
          ],
          "return": {
            "type": "string",
            "desc": "modified href value"
          }
        },
        {
          "name": "_handleActionKeyPress",
          "description": "Handles keypress to set the editted value on row or tab to next cell.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 440,
              "column": 2
            },
            "end": {
              "line": 456,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "keypress event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCellAlignment",
          "description": "Computes cell style to habe right align for numbers and left align by default.\nThe alignment can be fixed from column.alignment configuration.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 464,
              "column": 2
            },
            "end": {
              "line": 472,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "Object",
              "description": "column config."
            }
          ],
          "return": {
            "type": "string",
            "desc": "style string for text-align"
          }
        },
        {
          "name": "_getOffset",
          "description": "Computes the padding for tooltip,so that first row tooltip doesn't overlap the header row.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 2
            },
            "end": {
              "line": 481,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isFirstRow",
              "type": "boolean",
              "description": "flag denoting cell is in first row of the data-table"
            }
          ],
          "return": {
            "type": "number",
            "desc": "offset value."
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 483,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTableCell",
      "attributes": [
        {
          "name": "column",
          "description": "The definition of the column of the current cell.",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "type": "{key: string, label: string, type: string, uiType: string, sort: string, readOnly: boolean}"
        },
        {
          "name": "read-only",
          "description": "Disable editing field (equivalent to column.readOnly)",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "row",
          "description": "row object.",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "key",
          "description": "Index of the current `row` in the `_items` array",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "column-template",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "is-first-row",
          "description": "Flag denoting cell to be present in first row of the data-table",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-cell-rendered",
          "description": "Fired when the custom renderer is used to render the cell.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oe-data-table-cell-value-changed",
          "description": "Fired when the cell is value is changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "set-active-cell",
          "description": "Fired when the cell is tapped to make it editable.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "row-changed",
          "description": "Fired when the `row` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table-cell",
      "mixins": [
        "OECommonMixin"
      ]
    },
    {
      "description": "`oe-data-table-selection-cell`\n Selection cell used in oe-data-table.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--oe-data-table-selection-cell-content` | Mixin applied on the cell content | {}",
      "summary": "",
      "path": "src/oe-data-table-selection-cell.js",
      "properties": [
        {
          "name": "selectionCellContent",
          "type": "Object | null | undefined",
          "description": "Selection cell content customization object\n{\n   content:'The property of the row object whose first character that has to be displayed',\n   image:'The property of the row object which contains the URL of the image to be displayed'\n}\nThe object can be provided with either `content` or `image`. If both the properties are provided, image will take precedence.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 12
            },
            "end": {
              "line": 96,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "row",
          "type": "Object | null | undefined",
          "description": "Record data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 12
            },
            "end": {
              "line": 102,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "selected",
          "type": "boolean | null | undefined",
          "description": "Flag denoting if the item is selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 12
            },
            "end": {
              "line": 110,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_getFirstLetter",
          "description": "Gets the uppercase of first letter of property value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "row",
              "type": "Object",
              "description": "record object"
            },
            {
              "name": "prop",
              "type": "string",
              "description": "property name to get data"
            }
          ],
          "return": {
            "type": "string",
            "desc": "first character of the data."
          }
        },
        {
          "name": "_enableSelectionCellContent",
          "description": "Checks to use 'content' property instead of 'image' of selectionCellContent.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "row",
              "type": "Object",
              "description": "record object"
            },
            {
              "name": "selectionCellContent",
              "type": "Object",
              "description": "Selection cell content customization object"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag denoting to use 'content' property instead of 'image' of selectionCellContent"
          }
        },
        {
          "name": "_computeSelectionCellContentStyle",
          "description": "Computes style of the selection cell.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "row",
              "type": "Object",
              "description": "record object"
            },
            {
              "name": "selectionCellContent",
              "type": "Object",
              "description": "Selection cell content customization object"
            }
          ],
          "return": {
            "type": "string",
            "desc": "style value to set background image or color."
          }
        },
        {
          "name": "_toggleSelection",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_goToCell",
          "description": "On press of tab key set the next cell as active cell.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyDownEvent",
              "description": "key down event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkboxTapped",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 200,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTableSelectionCell",
      "attributes": [
        {
          "name": "selection-cell-content",
          "description": "Selection cell content customization object\n{\n   content:'The property of the row object whose first character that has to be displayed',\n   image:'The property of the row object which contains the URL of the image to be displayed'\n}\nThe object can be provided with either `content` or `image`. If both the properties are provided, image will take precedence.",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 12
            },
            "end": {
              "line": 96,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "row",
          "description": "Record data",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 12
            },
            "end": {
              "line": 102,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "selected",
          "description": "Flag denoting if the item is selected",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 12
            },
            "end": {
              "line": 110,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "set-active-cell",
          "description": "Fired when the tab key pressed after selection",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "toggle-selection",
          "description": "Fired when the selection is changed",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table-selection-cell",
      "mixins": [
        "OECommonMixin"
      ]
    },
    {
      "description": "`oe-data-table-row`\n Row component for each record in the oe-data-table.\n Internally uses 'oe-data-table-selection-cell' and 'oe-data-table-cell' to generate cells\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--oe-data-table-row` | Mixin to be applied to the table row | {}\n`--oe-data-table-row-selected` | Mixiin to be applied to the table row when selected | {}\n`--oe-data-table-row-hover` | Mixin to be applied to the table row on hover | {}\n`--oe-data-table-data` | Mixin to be applied to the table cell | {}\n`--oe-data-table-column-first` | Mixin to be applied to the first column | {}\n`--oe-data-table-column-last` | Mixin to be applied to the last column | {}\n`--oe-data-table-row-action` | Mixin applied to the row action icon buttons | {}",
      "summary": "",
      "path": "src/oe-data-table-row.js",
      "properties": [
        {
          "name": "selectionCellContent",
          "type": "Object | null | undefined",
          "description": "Selection cell content customization object\n{\n   content:'The property of the row object whose first character that has to be displayed',\n   image:'The property of the row object which contains the URL of the image to be displayed'\n}\nThe object can be provided with either `content` or `image`. If both the properties are provided, image will take precedence.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 120,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "row",
          "type": "Object | null | undefined",
          "description": "Record data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 12
            },
            "end": {
              "line": 127,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "rowIndex",
          "type": "number | null | undefined",
          "description": "Index of the current row.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 12
            },
            "end": {
              "line": 134,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "tabIndex",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 12
            },
            "end": {
              "line": 137,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "selected",
          "type": "boolean | null | undefined",
          "description": "Flag denoting if the item is selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 12
            },
            "end": {
              "line": 144,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disableSelection",
          "type": "boolean | null | undefined",
          "description": "Flag to disable selection of records",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 12
            },
            "end": {
              "line": 151,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "rowActions",
          "type": "Array | null | undefined",
          "description": "Array of row actions passed from data-table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 12
            },
            "end": {
              "line": 160,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "rowActionWidth",
          "type": "string | null | undefined",
          "description": "Style value passed from oe-data-table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 12
            },
            "end": {
              "line": 166,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readOnly",
          "type": "boolean | null | undefined",
          "description": "Flag to make the cells read-only",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 12
            },
            "end": {
              "line": 173,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "minColWidth",
          "type": "number | null | undefined",
          "description": "Minimum column width specified by oe-data-table\nThis will be overridden if a column specifies its own min width.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 12
            },
            "end": {
              "line": 180,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "columnTemplates",
          "type": "Array | null | undefined",
          "description": "List of templates passed from oe-data-table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 12
            },
            "end": {
              "line": 186,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeClassforRow",
          "description": "Computes the class for table row",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "boolean",
              "description": "selected flag"
            }
          ],
          "return": {
            "type": "string",
            "desc": "class to denote the row is selected."
          }
        },
        {
          "name": "_rowClicked",
          "description": "Click handler",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "click event on row click"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isFirstRow",
          "description": "Checks if the row is the first row of the table.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rowIndex",
              "type": "number",
              "description": "Index of current row."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag denoting first row"
          }
        },
        {
          "name": "_computeCellClass",
          "description": "Computes class applied to each cell",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 4
            },
            "end": {
              "line": 258,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rowChange",
              "type": "Object",
              "description": "change information on row data"
            },
            {
              "name": "column",
              "type": "Object",
              "description": "column information"
            }
          ],
          "return": {
            "type": "string",
            "desc": "class string"
          }
        },
        {
          "name": "_getValidTemplate",
          "description": "Returns a stamped template",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rowdelta",
              "type": "Object",
              "description": "change data of row"
            },
            {
              "name": "row",
              "type": "Object",
              "description": "current row recrod"
            },
            {
              "name": "column",
              "type": "Object",
              "description": "column definition"
            }
          ],
          "return": {
            "type": "HTMLTemplate",
            "desc": "template instance stamped with row and column"
          }
        },
        {
          "name": "_computeCellWidth",
          "description": "Computes Cell width style properties",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 295,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columnDelta",
              "type": "Object",
              "description": "change data of column"
            },
            {
              "name": "column",
              "type": "Object",
              "description": "column definition."
            }
          ],
          "return": {
            "type": "string",
            "desc": "style information for cell width"
          }
        },
        {
          "name": "_rowActionClicked",
          "description": "Handles row action clicked event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 326,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "click event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getVisibleColumns",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 4
            },
            "end": {
              "line": 330,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 331,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTableRow",
      "attributes": [
        {
          "name": "selection-cell-content",
          "description": "Selection cell content customization object\n{\n   content:'The property of the row object whose first character that has to be displayed',\n   image:'The property of the row object which contains the URL of the image to be displayed'\n}\nThe object can be provided with either `content` or `image`. If both the properties are provided, image will take precedence.",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 120,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "row",
          "description": "Record data",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 12
            },
            "end": {
              "line": 127,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "row-index",
          "description": "Index of the current row.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 12
            },
            "end": {
              "line": 134,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "tab-index",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 12
            },
            "end": {
              "line": 137,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selected",
          "description": "Flag denoting if the item is selected",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 12
            },
            "end": {
              "line": 144,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-selection",
          "description": "Flag to disable selection of records",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 12
            },
            "end": {
              "line": 151,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "row-actions",
          "description": "Array of row actions passed from data-table",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 12
            },
            "end": {
              "line": 160,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "row-action-width",
          "description": "Style value passed from oe-data-table",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 12
            },
            "end": {
              "line": 166,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "read-only",
          "description": "Flag to make the cells read-only",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 12
            },
            "end": {
              "line": 173,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "min-col-width",
          "description": "Minimum column width specified by oe-data-table\nThis will be overridden if a column specifies its own min width.",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 12
            },
            "end": {
              "line": 180,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "column-templates",
          "description": "List of templates passed from oe-data-table",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 12
            },
            "end": {
              "line": 186,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-data-table-row-action",
          "description": "Fired when the a row action is clicked.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oe-data-table-row-clicked",
          "description": "Fired when the row is clicked.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oe-data-table-row-form-load",
          "description": "Fired when the a row action containing a formUrl is clicked.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "toggle-selection",
          "description": "Fired when the selection is changed.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table-row",
      "mixins": [
        "OECommonMixin"
      ]
    },
    {
      "description": "### oe-data-table\n\n`<oe-data-table>` is a component for displaying data in tabular format. It is a Polymer component styled with Material Design Data Table Standards.\nIt can be used to add, edit and delete data in a model which has a `embedded`/`hasMany` relation.\nAlso to display the entries in a model\n\nThe data to be shown is set to `items` and columns to show is set to `columns`.\n\n### Defining Columns\n\nThe column(s) to show in the table can be configured using the `columns` property.\nThe `columns` property takes an array of objects which can have the following properties.\n\nColumn property | Description\n----------------|-------------\n`key` | The key of the row to get data from.\n`label` | The string to be shown in column header.\n`tooltip` | The string to be shown in column header as a tooltip.\n`valueAsTooltip`| Boolean flag to show value of a column as a tooltip on hover. Useful when the values are large and are hidden due to column width\n`type` | The type of the content that is shown in the column. For example date, timestamp, number, string.\n`uitype` | (Deprecated. use type) The type of the content that is shown in the column. For example date, timestamp.\n`uiType` | The input control that has to be used for inline editing.\n`readOnly` | Boolean flag denoting whether the column is non editable in inline mode , by default it is false.\n`width` | Width of the column in `px`.\n`minWidth` | Min Width of the column in `px`, by default grid level min width will be taken.\n`sort` |  Sort order of the current column. Takes either `asc` or `desc`.\n`alignment` | Alignment of the cell content , can have `left`,`right` or `center` .\n`firstToSort` | Whether to sort first by desc or asc, by default it is asc.\n`formatter` | A custom formatting function which returns the value to show in the cell.\n`renderer` | A custom rendering function which returns the element to show in the cell.\n`href` | Takes an express styled path and shows the cell content as a `hyperlink` with the provided path. For example, href=\"/models/customer/:id\".\n`cellClass` | Class to apply on data table cell.\n`cellClassRules` | Object having class name to be applied as key and an expression to evaluate as value.\n`valueGetter` | A custom getter function which returns a value for the property specified in the `key`.\n`hidden` | Column will be hidden if it is set to true.\n\n### Styling\n\n`<oe-data-table>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--oe-data-table` | Mixin to be applied to whole table | {}\n`--oe-data-table-header` | Mixin to be applied to the table header  | {}\n`--oe-data-table-header-title` | Mixin to be applied to the table header title  | {}\n`--oe-data-table-row-first` | Mixin to be applied to the first row of the table | {}\n`--oe-data-table-row-last` | Mixin to be applied to the last row of the table | {}\n`--oe-data-table-selection-cell-content` | Mixiin to be applied to the selection cell content if provided | {}",
      "summary": "",
      "path": "oe-data-table.js",
      "properties": [
        {
          "name": "hideHeader",
          "type": "boolean | null | undefined",
          "description": "Setting to `true` hides the header",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hideColumnHeader",
          "type": "boolean | null | undefined",
          "description": "Setting to true hides the column headers",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Disable all table header actions",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableAdd",
          "type": "boolean | null | undefined",
          "description": "Disable adding new records",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 6
            },
            "end": {
              "line": 345,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableEdit",
          "type": "boolean | null | undefined",
          "description": "Disable editing records",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 6
            },
            "end": {
              "line": 352,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableDelete",
          "type": "boolean | null | undefined",
          "description": "Disable deleting records",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 359,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disableConfigEditor",
          "type": "boolean | null | undefined",
          "description": "Disable editing column  configuration.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 366,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "rowsPerPageItems",
          "type": "Array | null | undefined",
          "description": "Array of page numbers that has to be shown in Rows per page dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 6
            },
            "end": {
              "line": 374,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[5,10,15,25,50,100,200,500,1000]"
        },
        {
          "name": "minColWidth",
          "type": "number | null | undefined",
          "description": "Minimum width that every column should accommodate. Can be overridden in column level.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "125"
        },
        {
          "name": "editorFormUrl",
          "type": "string | null | undefined",
          "description": "The page to show when a row is added/edited. For example \"/components/customer-default.html\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 389,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "emitOnSave",
          "type": "string | null | undefined",
          "description": "Event to emit on save . Passed to the lazy-component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "emptyStateMessage",
          "type": "string | null | undefined",
          "description": "Empty state message displayed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 6
            },
            "end": {
              "line": 404,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"No records found\""
        },
        {
          "name": "_modelBeingUpdated",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 6
            },
            "end": {
              "line": 408,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "recordHandling",
          "type": "string | null | undefined",
          "description": "When the grid is showing a list of models which needs to be saved by calling save api, then recordHandling needs to be `remote` which is default mode, if it is used for showing embedded/hasMany relations , then the recordHandling needs to be `local`/`localex` respectively.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 6
            },
            "end": {
              "line": 416,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"remote\""
        },
        {
          "name": "_activeCell",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 418,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "defaultRecord",
          "type": "Object | null | undefined",
          "description": "Default Object to set on the form when a new entry is to be added.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 6
            },
            "end": {
              "line": 430,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "toolbarActions",
          "type": "Array | null | undefined",
          "description": "Array of actions to be displayed as icons on the header\nActions should be of format\n{\n   icon: 'icons:alarm',\n   title: 'Notify Users',\n   action: 'alarm'\n}\nThese will appear as icons on the header with a tooltip specified by 'title'\nOn clicking on the icon an event will be raised with 'oe-data-table-action-' + the action provided.\nIn the case of example 'oe-data-table-action-alarm'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 6
            },
            "end": {
              "line": 448,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "menuActions",
          "type": "Array | null | undefined",
          "description": "Array of actions to be displayed on menu of the header\nThe format and working is similar to toolbarActions , The difference being that these will appear\nWhen the Menu icons is clicked and displays with icon and title.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 6
            },
            "end": {
              "line": 460,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "selectionCellContent",
          "type": "{content: string, image: string}",
          "description": "setting `selectionCellContent` with an object will display an circular overlay with configured content above the selection checkbox.\n The overlay will be hidden when that cell is hovered. This object can have the following properties\n `content` - The property of the row object whose first character that has to be displayed\n `image` - The property of the row object which contains the URL of the image to be displayed\n\n The object can be provided with either `content` or `image`. If both the properties are provided, image will take precedence.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 6
            },
            "end": {
              "line": 473,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "config",
          "type": "{columns: array, editorFormUrl: string}",
          "description": "A grid config object. Takes an object with columns and editorFormUrl. Setting this property sets the columns property and editorFormUrl property if provided",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_configChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "configCode",
          "type": "string | null | undefined",
          "description": "Config code related to entry in GridConfig Model to fetch configuration for the data-table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 488,
              "column": 6
            },
            "end": {
              "line": 492,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_configCodeChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "aggregatorAlignTop",
          "type": "boolean | null | undefined",
          "description": "Setting to `true` shows the aggregator row between column header and table body.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 497,
              "column": 6
            },
            "end": {
              "line": 499,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "rowActions",
          "type": "Array | null | undefined",
          "description": "Array of action objects that to be shown in each row.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 504,
              "column": 6
            },
            "end": {
              "line": 506,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "columns",
          "type": "{key: string, label: string, uitype: string, sort: string}",
          "description": "The definition of the columns to show in the header of the grid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 513,
              "column": 6
            },
            "end": {
              "line": 520,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_organizeData\"",
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "Array of objects to show in the grid. Each object in the array will be shown as each row.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 525,
              "column": 6
            },
            "end": {
              "line": 528,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "pageSize",
          "type": "number | null | undefined",
          "description": "Number of rows that has to be displayed in each page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 533,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_pageSizeChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "5"
        },
        {
          "name": "selectedItems",
          "type": "Array | null | undefined",
          "description": "An array containing the list of selected items.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 6
            },
            "end": {
              "line": 549,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "disableSelection",
          "type": "boolean | null | undefined",
          "description": "Setting to false disabled row selection and checkbox column on the grid",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 554,
              "column": 6
            },
            "end": {
              "line": 558,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "multiSelection",
          "type": "boolean | null | undefined",
          "description": "Settting to true enables selecting multiple items.\nThe `disableSelection` attribute has to be false in order to `multiSeletion` to work.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 564,
              "column": 6
            },
            "end": {
              "line": 567,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "currentPage",
          "type": "Object | null | undefined",
          "description": "Startin page number on load",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 572,
              "column": 6
            },
            "end": {
              "line": 576,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "rowCount",
          "type": "number | null | undefined",
          "description": "If `restUrl` is provided in `dataController`, total row count will be fetched and stored in this variable",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 581,
              "column": 6
            },
            "end": {
              "line": 584,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_hasPagination",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 586,
              "column": 6
            },
            "end": {
              "line": 588,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "model",
          "type": "string | null | undefined",
          "description": "Name of the model to get columns to show",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 6
            },
            "end": {
              "line": 595,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_pageSize",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 6
            },
            "end": {
              "line": 599,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "dataController",
          "type": "{controller: function, restUrl: string, filter: Object}",
          "description": "`dataController` is an object which takes parameters needed for doing custom pagination. This object can have the following properties\n\n`restUrl` - REST url where data has to fetch from data , `controller` a function which does custom data processing for pagination and provide data.\n\nThe filter can take an object filter object with where clause.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 610,
              "column": 6
            },
            "end": {
              "line": 613,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_organizeData\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_loadingData",
          "type": "boolean | null | undefined",
          "description": "Flag indicating that data is loading",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 618,
              "column": 6
            },
            "end": {
              "line": 620,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "paginationType",
          "type": "string | null | undefined",
          "description": "Property determining the type of pagination on the client side.\n \"scroll\" - support infinite scrolling for pagination ,\n \"page\" - show distinct records per page.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 627,
              "column": 6
            },
            "end": {
              "line": 630,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"scroll\""
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label to appear on heading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 635,
              "column": 6
            },
            "end": {
              "line": 637,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 707,
              "column": 2
            },
            "end": {
              "line": 762,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 764,
              "column": 2
            },
            "end": {
              "line": 767,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "selectItem",
          "description": "Selects a record",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 778,
              "column": 2
            },
            "end": {
              "line": 791,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "record to select"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "deselectItem",
          "description": "Deselects a record",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 797,
              "column": 2
            },
            "end": {
              "line": 808,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "record to deselect"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleSelection",
          "description": "Toggles selection of a row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 814,
              "column": 2
            },
            "end": {
              "line": 816,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "record to toggle selection"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleSelectAll",
          "description": "Toggles selection of all items in the data-table",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 822,
              "column": 2
            },
            "end": {
              "line": 833,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt",
              "type": "Event",
              "description": "change event from select-all checkbox"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleRowSelection",
          "description": "Toggles selection of a record.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 839,
              "column": 2
            },
            "end": {
              "line": 841,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event containing row data."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getSelectionState",
          "description": "Checks if a item is selected",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 848,
              "column": 2
            },
            "end": {
              "line": 850,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "item to check"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "selected value."
          }
        },
        {
          "name": "_showGridView",
          "description": "Changes view to show grid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 861,
              "column": 2
            },
            "end": {
              "line": 863,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showCustomizeView",
          "description": "Changes view to show column customizer",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 868,
              "column": 2
            },
            "end": {
              "line": 870,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showFormView",
          "description": "Changes view to show form",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 875,
              "column": 2
            },
            "end": {
              "line": 877,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showPanel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 885,
              "column": 2
            },
            "end": {
              "line": 887,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedView",
              "type": "string",
              "description": "selected view name"
            },
            {
              "name": "curView",
              "type": "string",
              "description": "current view name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "retrurns true if both parameters are equal."
          }
        },
        {
          "name": "_organizeData",
          "description": "Checks if a dataController/restUrl/items is provided.\n 1)If a dataController is present it will be called with currentpage,pagesize,filtersort and callback function to get the data for the page.\n 2)If restUrl is present uses a defaultController to fetch data from server through Ajax call\n 3)Expects 'Items' to be provided to apply sort/filter and paginate them.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 904,
              "column": 2
            },
            "end": {
              "line": 959,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "CustomEvent",
              "description": "custom event to render"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processData",
          "description": "Process the data by applying sort and then filter on them.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 967,
              "column": 2
            },
            "end": {
              "line": 981,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "type": "Array",
              "description": "list of items"
            },
            {
              "name": "cb",
              "type": "function",
              "description": "callback function"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_filter",
          "description": "Process the data by filtering them based on the columns.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 989,
              "column": 2
            },
            "end": {
              "line": 1013,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "list of items"
            },
            {
              "name": "done",
              "type": "function",
              "description": "callback function"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_sort",
          "description": "Process the data by sorting them based on the 'sort' on column.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1021,
              "column": 2
            },
            "end": {
              "line": 1062,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "list of items"
            },
            {
              "name": "done",
              "type": "function",
              "description": "callback function"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addCustomColumns",
          "description": "Computes additional properties into items when\ncolumns are configured with 'valueGetter'.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1070,
              "column": 2
            },
            "end": {
              "line": 1109,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "list of items"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeSummary",
          "description": "Executes the aggregation on the items based on aggregation in column\nReturns the aggregated result or null",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1126,
              "column": 2
            },
            "end": {
              "line": 1178,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "Object",
              "description": "column configuration"
            },
            {
              "name": "_itemsChange",
              "type": "Object",
              "description": "change data on _items"
            }
          ],
          "return": {
            "type": "(number | string)",
            "desc": "aggregated output"
          }
        },
        {
          "name": "_hasAggregator",
          "description": "Checks if any of the column is configured with aggregator",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1186,
              "column": 2
            },
            "end": {
              "line": 1190,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columns",
              "type": "Array",
              "description": "column configuration array"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag denoting if aggregation exists"
          }
        },
        {
          "name": "_computeTableBodyClass",
          "description": "Computes a class name for table",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1197,
              "column": 2
            },
            "end": {
              "line": 1199,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "aggregatorAlignTop",
              "type": "boolean",
              "description": "flag to place aggregator row above table rows"
            }
          ],
          "return": {
            "type": "string",
            "desc": "class name"
          }
        },
        {
          "name": "kebabCaseToCamelCase",
          "description": "Converts string from snake case to CamelCase.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1208,
              "column": 2
            },
            "end": {
              "line": 1212,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "string",
              "description": "string to convert"
            }
          ],
          "return": {
            "type": "string",
            "desc": "converted string"
          }
        },
        {
          "name": "_keyHandlers",
          "description": "Attaches/Detaches event listeners based on 'disabled' flag and '_items' array length",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1217,
              "column": 2
            },
            "end": {
              "line": 1234,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_keyDownListener",
          "description": "Toggles selection of next/prev row based on up/down arrow key press",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1240,
              "column": 2
            },
            "end": {
              "line": 1262,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "KeyDownEvent",
              "description": "key down event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeRowActionWidth",
          "description": "Computes `__rowActionWidth` property to send to each row",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1268,
              "column": 2
            },
            "end": {
              "line": 1270,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rowActions",
              "type": "number",
              "description": "length of row actions"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCellReadOnly",
          "description": "Computes `__isCellReadOnly` property to send to each cell",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1277,
              "column": 2
            },
            "end": {
              "line": 1279,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled",
              "type": "boolean",
              "description": "flag to disable data-table"
            },
            {
              "name": "disableEdit",
              "type": "boolean",
              "description": "flag to disabled editing"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showInfinteScroll",
          "description": "Checks if Infinite scroll using 'iron-list' is to be used",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1286,
              "column": 2
            },
            "end": {
              "line": 1288,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "paginationType",
              "type": "string",
              "description": "pagination type of data-table"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "flag to enable infinite scroll mode"
          }
        },
        {
          "name": "_getVisibleColumns",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1290,
              "column": 2
            },
            "end": {
              "line": 1292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            }
          ]
        },
        {
          "name": "_computeCellAlignment",
          "description": "Computes text alignment style based on column.type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1300,
              "column": 2
            },
            "end": {
              "line": 1303,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "Object",
              "description": "column configuration"
            }
          ],
          "return": {
            "type": "string",
            "desc": "style attribute for the cell"
          }
        },
        {
          "name": "_itemsChanged",
          "description": "Observer on 'items' to notify '_items' on data changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1310,
              "column": 2
            },
            "end": {
              "line": 1337,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change",
              "type": "Object",
              "description": "change data on 'items'"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_pageSizeChanged",
          "description": "Observer on pageSize to compute currentPage when page size is modified.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1345,
              "column": 2
            },
            "end": {
              "line": 1361,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pageSize",
              "type": "number",
              "description": "new page size"
            },
            {
              "name": "oldSize",
              "type": "number",
              "description": "old page size"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCellWidth",
          "description": "Computes Cell width style properties",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1369,
              "column": 2
            },
            "end": {
              "line": 1374,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columnDelta",
              "type": "Object",
              "description": "change data of column"
            },
            {
              "name": "column",
              "type": "Object",
              "description": "column definition."
            }
          ],
          "return": {
            "type": "string",
            "desc": "style information for cell width"
          }
        },
        {
          "name": "_showPagination",
          "description": "Computes to show pagination-panel",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1380,
              "column": 2
            },
            "end": {
              "line": 1382,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change",
              "type": "Object",
              "description": "change data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_changeColumnWidth",
          "description": "Updates the column width based on event detail",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1388,
              "column": 2
            },
            "end": {
              "line": 1392,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "CustomEvent",
              "description": "event containing width information"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateRowWidth",
          "description": "Updates the row width of iron-list after computing the scroll bar width.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1397,
              "column": 2
            },
            "end": {
              "line": 1408,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setActiveCell",
          "description": "Sets the active cell that is being edited",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1414,
              "column": 2
            },
            "end": {
              "line": 1421,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event with cell data."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetActiveCell",
          "description": "Removes the active cell if exists after calling 'exitEditMode' on the cell",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1427,
              "column": 2
            },
            "end": {
              "line": 1433,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_applyColumnCustomization",
          "description": "Apply the customization on the columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1439,
              "column": 2
            },
            "end": {
              "line": 1442,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "event",
              "description": "event containing the columns detail."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateIronList",
          "description": "Updates the height of each row in iron-list to set maxRowHeight.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1448,
              "column": 2
            },
            "end": {
              "line": 1453,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "event containing row height"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateRowHeight",
          "description": "Updates iron-list to compute height using 'notifyResize'.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1458,
              "column": 2
            },
            "end": {
              "line": 1463,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_refreshRender",
          "description": "Re renders the content of data-table.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1469,
              "column": 2
            },
            "end": {
              "line": 1474,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event with filter/sort information"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getColumnsFromModelDef",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1476,
              "column": 2
            },
            "end": {
              "line": 1509,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "modelDef"
            }
          ]
        },
        {
          "name": "_configChanged",
          "description": "Observer called when config object is changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1516,
              "column": 2
            },
            "end": {
              "line": 1528,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newCfg",
              "type": "Object",
              "description": "new configuration for data-table."
            },
            {
              "name": "oldCfg",
              "type": "Object",
              "description": "old configuration of data-table"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_scrollHandler",
          "description": "Handler for scroll event on rows to keep summary row in sync",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1535,
              "column": 2
            },
            "end": {
              "line": 1542,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "scroll event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeGridHeight",
          "description": "Computes and sets the table height",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1549,
              "column": 2
            },
            "end": {
              "line": 1563,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pageSize",
              "type": "number",
              "description": "page size of data-table"
            },
            {
              "name": "itemsToShow",
              "type": "number",
              "description": "length of items to display"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getRefCodes",
          "description": "Fetches refcode from server.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1570,
              "column": 2
            },
            "end": {
              "line": 1578,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "string",
              "description": "url to fetch data"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "a promise that gets resolved based on server response."
          }
        },
        {
          "name": "_getRefCodeModel",
          "description": "Fetches refCode for model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1585,
              "column": 2
            },
            "end": {
              "line": 1594,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "modelName",
              "type": "string",
              "description": "model name to get ref codes ."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "a promise that gets resolved based on server response."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 92,
          "column": 0
        },
        "end": {
          "line": 1595,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeDataTable",
      "attributes": [
        {
          "name": "hide-header",
          "description": "Setting to `true` hides the header",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-column-header",
          "description": "Setting to true hides the column headers",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Disable all table header actions",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 337,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-add",
          "description": "Disable adding new records",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 6
            },
            "end": {
              "line": 345,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-edit",
          "description": "Disable editing records",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 6
            },
            "end": {
              "line": 352,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-delete",
          "description": "Disable deleting records",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 359,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disable-config-editor",
          "description": "Disable editing column  configuration.",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 366,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "rows-per-page-items",
          "description": "Array of page numbers that has to be shown in Rows per page dropdown",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 6
            },
            "end": {
              "line": 374,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "min-col-width",
          "description": "Minimum width that every column should accommodate. Can be overridden in column level.",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 6
            },
            "end": {
              "line": 382,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "editor-form-url",
          "description": "The page to show when a row is added/edited. For example \"/components/customer-default.html\"",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 389,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "emit-on-save",
          "description": "Event to emit on save . Passed to the lazy-component.",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 6
            },
            "end": {
              "line": 396,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "empty-state-message",
          "description": "Empty state message displayed",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 6
            },
            "end": {
              "line": 404,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "record-handling",
          "description": "When the grid is showing a list of models which needs to be saved by calling save api, then recordHandling needs to be `remote` which is default mode, if it is used for showing embedded/hasMany relations , then the recordHandling needs to be `local`/`localex` respectively.",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 6
            },
            "end": {
              "line": 416,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "default-record",
          "description": "Default Object to set on the form when a new entry is to be added.",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 6
            },
            "end": {
              "line": 430,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "toolbar-actions",
          "description": "Array of actions to be displayed as icons on the header\nActions should be of format\n{\n   icon: 'icons:alarm',\n   title: 'Notify Users',\n   action: 'alarm'\n}\nThese will appear as icons on the header with a tooltip specified by 'title'\nOn clicking on the icon an event will be raised with 'oe-data-table-action-' + the action provided.\nIn the case of example 'oe-data-table-action-alarm'",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 6
            },
            "end": {
              "line": 448,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "menu-actions",
          "description": "Array of actions to be displayed on menu of the header\nThe format and working is similar to toolbarActions , The difference being that these will appear\nWhen the Menu icons is clicked and displays with icon and title.",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 6
            },
            "end": {
              "line": 460,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "selection-cell-content",
          "description": "setting `selectionCellContent` with an object will display an circular overlay with configured content above the selection checkbox.\n The overlay will be hidden when that cell is hovered. This object can have the following properties\n `content` - The property of the row object whose first character that has to be displayed\n `image` - The property of the row object which contains the URL of the image to be displayed\n\n The object can be provided with either `content` or `image`. If both the properties are provided, image will take precedence.",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 6
            },
            "end": {
              "line": 473,
              "column": 7
            }
          },
          "metadata": {},
          "type": "{content: string, image: string}"
        },
        {
          "name": "config",
          "description": "A grid config object. Takes an object with columns and editorFormUrl. Setting this property sets the columns property and editorFormUrl property if provided",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 6
            },
            "end": {
              "line": 483,
              "column": 7
            }
          },
          "metadata": {},
          "type": "{columns: array, editorFormUrl: string}"
        },
        {
          "name": "config-code",
          "description": "Config code related to entry in GridConfig Model to fetch configuration for the data-table",
          "sourceRange": {
            "start": {
              "line": 488,
              "column": 6
            },
            "end": {
              "line": 492,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "aggregator-align-top",
          "description": "Setting to `true` shows the aggregator row between column header and table body.",
          "sourceRange": {
            "start": {
              "line": 497,
              "column": 6
            },
            "end": {
              "line": 499,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "row-actions",
          "description": "Array of action objects that to be shown in each row.",
          "sourceRange": {
            "start": {
              "line": 504,
              "column": 6
            },
            "end": {
              "line": 506,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "columns",
          "description": "The definition of the columns to show in the header of the grid.",
          "sourceRange": {
            "start": {
              "line": 513,
              "column": 6
            },
            "end": {
              "line": 520,
              "column": 7
            }
          },
          "metadata": {},
          "type": "{key: string, label: string, uitype: string, sort: string}"
        },
        {
          "name": "items",
          "description": "Array of objects to show in the grid. Each object in the array will be shown as each row.",
          "sourceRange": {
            "start": {
              "line": 525,
              "column": 6
            },
            "end": {
              "line": 528,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "page-size",
          "description": "Number of rows that has to be displayed in each page",
          "sourceRange": {
            "start": {
              "line": 533,
              "column": 6
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "selected-items",
          "description": "An array containing the list of selected items.",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 6
            },
            "end": {
              "line": 549,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "disable-selection",
          "description": "Setting to false disabled row selection and checkbox column on the grid",
          "sourceRange": {
            "start": {
              "line": 554,
              "column": 6
            },
            "end": {
              "line": 558,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "multi-selection",
          "description": "Settting to true enables selecting multiple items.\nThe `disableSelection` attribute has to be false in order to `multiSeletion` to work.",
          "sourceRange": {
            "start": {
              "line": 564,
              "column": 6
            },
            "end": {
              "line": 567,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "current-page",
          "description": "Startin page number on load",
          "sourceRange": {
            "start": {
              "line": 572,
              "column": 6
            },
            "end": {
              "line": 576,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "row-count",
          "description": "If `restUrl` is provided in `dataController`, total row count will be fetched and stored in this variable",
          "sourceRange": {
            "start": {
              "line": 581,
              "column": 6
            },
            "end": {
              "line": 584,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "model",
          "description": "Name of the model to get columns to show",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 6
            },
            "end": {
              "line": 595,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "data-controller",
          "description": "`dataController` is an object which takes parameters needed for doing custom pagination. This object can have the following properties\n\n`restUrl` - REST url where data has to fetch from data , `controller` a function which does custom data processing for pagination and provide data.\n\nThe filter can take an object filter object with where clause.",
          "sourceRange": {
            "start": {
              "line": 610,
              "column": 6
            },
            "end": {
              "line": 613,
              "column": 7
            }
          },
          "metadata": {},
          "type": "{controller: function, restUrl: string, filter: Object}"
        },
        {
          "name": "pagination-type",
          "description": "Property determining the type of pagination on the client side.\n \"scroll\" - support infinite scrolling for pagination ,\n \"page\" - show distinct records per page.",
          "sourceRange": {
            "start": {
              "line": 627,
              "column": 6
            },
            "end": {
              "line": 630,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Label to appear on heading",
          "sourceRange": {
            "start": {
              "line": 635,
              "column": 6
            },
            "end": {
              "line": 637,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "columns-changed",
          "description": "Fired when the `columns` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-items-changed",
          "description": "Fired when the `selectedItems` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "current-page-changed",
          "description": "Fired when the `currentPage` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "row-count-changed",
          "description": "Fired when the `rowCount` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-data-table",
      "mixins": [
        "OECommonMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "`OEDataTableMixin`\nThis Mixin contains methods used by data-table like.\n* Default controller used to fetch data based on restUrl provided.\n* CRUD operation methods for column configuration on GridConfig model.\n* Form handler event listeners to update the data list.",
      "summary": "",
      "path": "src/oe-data-table-mixin.js",
      "properties": [
        {
          "name": "computedItems",
          "type": "string",
          "description": "Computes the variable holding the data .\nIf a dataController or a restUrl is specified on the data-table the data is present in '_items' array.\nElse the data is set be client on 'items' array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "__defaultController",
          "description": "Makes a server call based on the resturl provided and\nthe filter/sort information to fetch data for the current page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pageNumberToFetch",
              "type": "number",
              "description": "page number to fetch"
            },
            {
              "name": "pageSize",
              "type": "number",
              "description": "page size to fetch"
            },
            {
              "name": "filterSort",
              "type": "Object",
              "description": "filter and sort options"
            },
            {
              "name": "done",
              "type": "function",
              "description": "callback function"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fetchRowCount",
          "description": "Fetches the Row count for total number of rows",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter",
              "type": "Object",
              "description": "filter on resturl"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_configCodeChanged",
          "description": "Observer called on 'configCode' changed to fetch and set\ncolumn configurations from the model 'GridConfig' and saves it in localstorage",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveConfigLocal",
          "description": "Saves grid configuration into localstorage of the browser.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "configCode",
              "type": "string",
              "description": "config code"
            },
            {
              "name": "gridConfig",
              "type": "Object",
              "description": "grid configuration"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getConfigLocal",
          "description": "Gets the grid configuration from browser localstorage.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "configCode",
              "type": "string",
              "description": "config code."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "grid configuration."
          }
        },
        {
          "name": "_saveGridConfig",
          "description": "Saves current grid configuration to the server model 'GridConfig'",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 4
            },
            "end": {
              "line": 241,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showAddForm",
          "description": "Launches the form view for user to add data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 268,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showEditForm",
          "description": "Launches the form view for user to edit the selected record.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 4
            },
            "end": {
              "line": 297,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_loadFormAction",
          "description": "Lanuches the form view for user to see the record in the form ,\nprovided by user in the formUrl for the row-action.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event containing the row and formUrl."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_formHandleAdd",
          "description": "Pushes the new record into the data array.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event containing the record to add"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_formHandleUpdate",
          "description": "Updates the record in the data array.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 4
            },
            "end": {
              "line": 373,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event containing the record data of update"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_formHandleRemoteAdd",
          "description": "Pushes the new record into the data array once the data is saved on the server.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event containing the record to add."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_formHandleRemoteUpdate",
          "description": "Updates the record in the data array once data is saved on the server.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 4
            },
            "end": {
              "line": 410,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event containing the record data of update."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_formHandleRemoteDelete",
          "description": "Deletes the record from data array once it is deleted from server.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 417,
              "column": 4
            },
            "end": {
              "line": 427,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event containing the record to delete."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteSelectedRows",
          "description": "Deletes the selected records from data array.\nIf the record-handling is set to remote uses the form components 'doDelete' method to trigger delete on server side.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "Event",
              "description": "event containing the records to delete."
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 461,
          "column": 2
        }
      },
      "privacy": "public",
      "name": "DataTableMixin",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
